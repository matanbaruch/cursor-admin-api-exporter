1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "cursor-admin-api-exporter.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "cursor-admin-api-exporter.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "cursor-admin-api-exporter.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "cursor-admin-api-exporter.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

2. Check the health of the exporter:
{{- if .Values.ingress.enabled }}
{{- $host := (index .Values.ingress.hosts 0).host }}
  curl http{{ if .Values.ingress.tls }}s{{ end }}://{{ $host }}/health
{{- else }}
  kubectl --namespace {{ .Release.Namespace }} port-forward svc/{{ include "cursor-admin-api-exporter.fullname" . }} 8080:{{ .Values.service.port }}
  curl http://localhost:8080/health
{{- end }}

3. Access metrics:
{{- if .Values.ingress.enabled }}
{{- $host := (index .Values.ingress.hosts 0).host }}
  curl http{{ if .Values.ingress.tls }}s{{ end }}://{{ $host }}{{ .Values.config.metricsPath }}
{{- else }}
  kubectl --namespace {{ .Release.Namespace }} port-forward svc/{{ include "cursor-admin-api-exporter.fullname" . }} 8080:{{ .Values.service.port }}
  curl http://localhost:8080{{ .Values.config.metricsPath }}
{{- end }}

4. View logs:
  kubectl --namespace {{ .Release.Namespace }} logs -l "app.kubernetes.io/name={{ include "cursor-admin-api-exporter.name" . }},app.kubernetes.io/instance={{ .Release.Name }}"

{{- if not .Values.cursor.apiToken }}

‚ö†Ô∏è  WARNING: Cursor Admin API token not set!
   Please set the API token using one of these methods:

   1. Upgrade with --set:
      helm upgrade {{ .Release.Name }} ./charts/cursor-admin-api-exporter --set cursor.apiToken="your-token"

   2. Create secret manually:
      kubectl create secret generic {{ include "cursor-admin-api-exporter.secretName" . }} \
        --from-literal=cursor-api-token="your-token"

      Then restart the deployment:
      kubectl rollout restart deployment/{{ include "cursor-admin-api-exporter.fullname" . }}

{{- end }}

{{- if .Values.serviceMonitor.enabled }}

‚úÖ ServiceMonitor is enabled for Prometheus Operator integration.
   Make sure your Prometheus Operator can discover ServiceMonitors with these labels:
{{- range $key, $value := .Values.serviceMonitor.additionalLabels }}
   {{ $key }}: {{ $value }}
{{- end }}

{{- end }}

üìä Available Metrics:
   - cursor_team_members_total - Total number of team members
   - cursor_daily_usage - Daily usage metrics
   - cursor_spending - Spending metrics
   - cursor_usage_events - Usage events metrics

   For a complete list of metrics, visit the metrics endpoint.

üìñ Documentation: https://github.com/matanbaruch/cursor-admin-api-exporter